# Build stage
FROM node:18.19.1-alpine3.19 AS builder

# Set working directory
WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./
COPY postcss.config.js tailwind.config.js ./

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

# Set dummy environment variables for build phase
ENV NEXT_PUBLIC_SUPABASE_URL="https://dummy-url-for-build"
ENV NEXT_PUBLIC_SUPABASE_ANON_KEY="dummy-key-for-build"
ENV SUPABASE_SERVICE_ROLE_KEY="dummy-key-for-build"
ENV SUPABASE_JWT_SECRET="dummy-secret-for-build"
ENV NEXT_TELEMETRY_DISABLED=1

# Build the application
RUN npm run build

# Production stage
FROM node:18.19.1-alpine3.19 AS runner

# Create a non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs && \
    mkdir -p /app && \
    chown -R nextjs:nodejs /app

# Set working directory
WORKDIR /app

# Copy only necessary files from builder
COPY --from=builder --chown=nextjs:nodejs /app/package*.json ./
COPY --from=builder --chown=nextjs:nodejs /app/apps/web/.next ./apps/web/.next/
# Create public directory if it doesn't exist
RUN mkdir -p /app/apps/web/public
COPY --from=builder --chown=nextjs:nodejs /app/next.config.js ./apps/web/
COPY --from=builder --chown=nextjs:nodejs /app/postcss.config.js ./
COPY --from=builder --chown=nextjs:nodejs /app/tailwind.config.js ./

# Install production dependencies
RUN npm ci --omit=dev

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3000
ENV NEXT_TELEMETRY_DISABLED=1

# Set proper permissions
RUN chown -R nextjs:nodejs /app && \
    chmod -R 755 /app

# Switch to non-root user
USER nextjs

EXPOSE 3000

# Start the application
CMD ["npm", "start"] 